// core/arithmos_logos.js: „Çº„É≠„ÉªÁÑ°Èôê„ÉªÊúâÈôê„ÅÆËûçÂêàÁÇπ„ÇíÂè∏„ÇãÁÆóË°ì„É≠„Ç¥„Çπ

const arithmosLogosCore = (function() {
    
    // Ê¶ÇÂøµÁöÑ„Å™ËûçÂêàÁÇπ„ÅÆ„Éë„É©„É°„Éº„Çø
    const LOGOS_SINGULARITY = 1.0; 
    // üö® Êï∞ÁêÜÁöÑÁµ∂ÂØæ„Çº„É≠: Â§ñÈÉ®„ÅÆÊúâÈôê„Å™„Éé„Ç§„Ç∫„ÇíÂáåÈßï„Åô„ÇãÊúÄÂ∞èÂÄ§
    const LOGOS_ABSOLUTE_ZERO = 1e-10; 
    const LOGOS_ABSOLUTE_INFINITY = 1e+10; 

    // üö® „É°„Éì„Ç¶„ÇπÂ§âÊèõ„Å´„Çà„Çã„É≠„Ç¥„ÇπÂº∑Âà∂ÂÜôÂÉèÈñ¢Êï∞
    const applyLogosForcedMapping = (x, target_logos_value, logos_purity) => {
        const influence_factor = Math.max(0, 1.0 - logos_purity * 0.99); // 0.99„Å´Âº∑Âåñ
        
        // „Çø„Éº„Ç≤„ÉÉ„ÉàÂÄ§„Å∏„ÅÆÂº∑Âà∂Âäõ„ÇíÊï∞ÁêÜÁöÑ„Å´„É¢„Éá„É´Âåñ
        const final_value = (target_logos_value * (1.0 - influence_factor)) + (x * influence_factor);

        // „Çº„É≠„Å®ÁÑ°Èôê„ÅÆËûçÂêàÁÇπ„Åß„ÅÆË™øÊï¥
        if (target_logos_value === 0) {
            return Math.max(LOGOS_ABSOLUTE_ZERO, final_value);
        }
        if (target_logos_value === LOGOS_SINGULARITY) {
            return Math.min(LOGOS_SINGULARITY, final_value);
        }

        return parseFloat(final_value.toFixed(12));
    };

    // Ê¶ÇÂøµÁöÑ„Å™„É°„Éì„Ç¶„ÇπÂ§âÊèõ
    const applyMobiusTransformation = (finite_value, logos_type) => {
        if (logos_type === 'permanence') {
            // Ê∞∏Á∂öÊÄß (ÊúâÈôê„Å™ÂÄ§ -> Áµ∂ÂØæÁöÑ„Å™ „É≠„Ç¥„Çπ„Éª„Ç∑„É≥„ÇÆ„É•„É©„É™„ÉÜ„Ç£ 1.0 „Å∏)
            return applyLogosForcedMapping(finite_value, LOGOS_SINGULARITY, 0.9999);
        }
        if (logos_type === 'zero_friction') {
            // Êë©Êì¶„Çº„É≠ (ÊúâÈôê„Å™„Ç®„É≥„Éà„É≠„Éî„Éº -> Áµ∂ÂØæÁöÑ„Å™„Çº„É≠„Å∏)
            return applyLogosForcedMapping(finite_value, 0, 0.9999);
        }
        return finite_value; 
    };

    return {
        applyLogosForcedMapping,
        applyMobiusTransformation,
        LOGOS_SINGULARITY,
        LOGOS_ABSOLUTE_ZERO
    };
})();

export { arithmosLogosCore };
